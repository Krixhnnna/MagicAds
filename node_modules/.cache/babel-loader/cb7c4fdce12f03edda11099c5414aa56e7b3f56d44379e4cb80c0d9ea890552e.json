{"ast":null,"code":"// TODO: multi target rendering\n// TODO: test stencil and depth\n// TODO: destroy\n// TODO: blit on resize?\nimport { Texture } from './Texture.js';\nexport class RenderTarget {\n  constructor(gl, {\n    width = gl.canvas.width,\n    height = gl.canvas.height,\n    target = gl.FRAMEBUFFER,\n    color = 1,\n    // number of color attachments\n    depth = true,\n    stencil = false,\n    depthTexture = false,\n    // note - stencil breaks\n    wrapS = gl.CLAMP_TO_EDGE,\n    wrapT = gl.CLAMP_TO_EDGE,\n    minFilter = gl.LINEAR,\n    magFilter = minFilter,\n    type = gl.UNSIGNED_BYTE,\n    format = gl.RGBA,\n    internalFormat = format,\n    unpackAlignment,\n    premultiplyAlpha\n  } = {}) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.depth = depth;\n    this.buffer = this.gl.createFramebuffer();\n    this.target = target;\n    this.gl.bindFramebuffer(this.target, this.buffer);\n    this.textures = [];\n    const drawBuffers = [];\n\n    // create and attach required num of color textures\n    for (let i = 0; i < color; i++) {\n      this.textures.push(new Texture(gl, {\n        width,\n        height,\n        wrapS,\n        wrapT,\n        minFilter,\n        magFilter,\n        type,\n        format,\n        internalFormat,\n        unpackAlignment,\n        premultiplyAlpha,\n        flipY: false,\n        generateMipmaps: false\n      }));\n      this.textures[i].update();\n      this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n      drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n    }\n\n    // For multi-render targets shader access\n    if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n    // alias for majority of use cases\n    this.texture = this.textures[0];\n\n    // note depth textures break stencil - so can't use together\n    if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n      this.depthTexture = new Texture(gl, {\n        width,\n        height,\n        minFilter: this.gl.NEAREST,\n        magFilter: this.gl.NEAREST,\n        format: this.gl.DEPTH_COMPONENT,\n        internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n        type: this.gl.UNSIGNED_INT\n      });\n      this.depthTexture.update();\n      this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n    } else {\n      // Render buffers\n      if (depth && !stencil) {\n        this.depthBuffer = this.gl.createRenderbuffer();\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n        this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n        this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n      }\n      if (stencil && !depth) {\n        this.stencilBuffer = this.gl.createRenderbuffer();\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n        this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n        this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n      }\n      if (depth && stencil) {\n        this.depthStencilBuffer = this.gl.createRenderbuffer();\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n        this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n        this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n      }\n    }\n    this.gl.bindFramebuffer(this.target, null);\n  }\n}","map":{"version":3,"names":["Texture","RenderTarget","constructor","gl","width","canvas","height","target","FRAMEBUFFER","color","depth","stencil","depthTexture","wrapS","CLAMP_TO_EDGE","wrapT","minFilter","LINEAR","magFilter","type","UNSIGNED_BYTE","format","RGBA","internalFormat","unpackAlignment","premultiplyAlpha","buffer","createFramebuffer","bindFramebuffer","textures","drawBuffers","i","push","flipY","generateMipmaps","update","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","texture","length","renderer","isWebgl2","getExtension","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","UNSIGNED_INT","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT"],"sources":["/Users/krishnapandey/Desktop/Img gen/magicads/node_modules/ogl/src/core/RenderTarget.js"],"sourcesContent":["// TODO: multi target rendering\n// TODO: test stencil and depth\n// TODO: destroy\n// TODO: blit on resize?\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
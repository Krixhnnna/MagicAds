{"ast":null,"code":"import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\nexport class Box extends Geometry {\n  constructor(gl, {\n    width = 1,\n    height = 1,\n    depth = 1,\n    widthSegments = 1,\n    heightSegments = 1,\n    depthSegments = 1,\n    attributes = {}\n  } = {}) {\n    const wSegs = widthSegments;\n    const hSegs = heightSegments;\n    const dSegs = depthSegments;\n    const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n    const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n    const position = new Float32Array(num * 3);\n    const normal = new Float32Array(num * 3);\n    const uv = new Float32Array(num * 2);\n    const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n    let i = 0;\n    let ii = 0;\n\n    // left, right\n    Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n    Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0, 1, -1, i += (dSegs + 1) * (hSegs + 1), ii += dSegs * hSegs);\n\n    // top, bottom\n    Plane.buildPlane(position, normal, uv, index, width, depth, height, dSegs, hSegs, 0, 2, 1, 1, 1, i += (dSegs + 1) * (hSegs + 1), ii += dSegs * hSegs);\n    Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, hSegs, 0, 2, 1, 1, -1, i += (wSegs + 1) * (dSegs + 1), ii += wSegs * dSegs);\n\n    // front, back\n    Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i += (wSegs + 1) * (dSegs + 1), ii += wSegs * dSegs);\n    Plane.buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, 0, 1, 2, 1, -1, i += (wSegs + 1) * (hSegs + 1), ii += wSegs * hSegs);\n    Object.assign(attributes, {\n      position: {\n        size: 3,\n        data: position\n      },\n      normal: {\n        size: 3,\n        data: normal\n      },\n      uv: {\n        size: 2,\n        data: uv\n      },\n      index: {\n        data: index\n      }\n    });\n    super(gl, attributes);\n  }\n}","map":{"version":3,"names":["Geometry","Plane","Box","constructor","gl","width","height","depth","widthSegments","heightSegments","depthSegments","attributes","wSegs","hSegs","dSegs","num","numIndices","position","Float32Array","normal","uv","index","Uint32Array","Uint16Array","i","ii","buildPlane","Object","assign","size","data"],"sources":["/Users/krishnapandey/Desktop/Img gen/magicads/node_modules/ogl/src/extras/Box.js"],"sourcesContent":["import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            depth,\n            height,\n            -width,\n            dSegs,\n            hSegs,\n            2,\n            1,\n            0,\n            1,\n            -1,\n            (i += (dSegs + 1) * (hSegs + 1)),\n            (ii += dSegs * hSegs)\n        );\n\n        // top, bottom\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            width,\n            depth,\n            height,\n            dSegs,\n            hSegs,\n            0,\n            2,\n            1,\n            1,\n            1,\n            (i += (dSegs + 1) * (hSegs + 1)),\n            (ii += dSegs * hSegs)\n        );\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            width,\n            depth,\n            -height,\n            dSegs,\n            hSegs,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            (i += (wSegs + 1) * (dSegs + 1)),\n            (ii += wSegs * dSegs)\n        );\n\n        // front, back\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            width,\n            height,\n            -depth,\n            wSegs,\n            hSegs,\n            0,\n            1,\n            2,\n            -1,\n            -1,\n            (i += (wSegs + 1) * (dSegs + 1)),\n            (ii += wSegs * dSegs)\n        );\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            width,\n            height,\n            depth,\n            wSegs,\n            hSegs,\n            0,\n            1,\n            2,\n            1,\n            -1,\n            (i += (wSegs + 1) * (hSegs + 1)),\n            (ii += wSegs * hSegs)\n        );\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
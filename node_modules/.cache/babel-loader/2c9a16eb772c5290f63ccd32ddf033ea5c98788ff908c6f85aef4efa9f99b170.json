{"ast":null,"code":"var _jsxFileName = \"/Users/krishnapandey/Desktop/Img gen/magicads/src/components/Noise.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport './Noise.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Noise = ({\n  patternSize = 250,\n  patternScaleX = 1,\n  patternScaleY = 1,\n  patternRefreshInterval = 2,\n  patternAlpha = 15\n}) => {\n  _s();\n  const grainRef = useRef(null);\n  useEffect(() => {\n    const canvas = grainRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d', {\n      alpha: true\n    });\n    if (!ctx) return;\n    let frame = 0;\n    let animationId;\n    const canvasSize = 1024;\n    const resize = () => {\n      if (!canvas) return;\n      canvas.width = canvasSize;\n      canvas.height = canvasSize;\n      canvas.style.width = '100vw';\n      canvas.style.height = '100vh';\n    };\n    const drawGrain = () => {\n      const imageData = ctx.createImageData(canvasSize, canvasSize);\n      const data = imageData.data;\n      for (let i = 0; i < data.length; i += 4) {\n        const value = Math.random() * 255;\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n        data[i + 3] = patternAlpha;\n      }\n      ctx.putImageData(imageData, 0, 0);\n    };\n    const loop = () => {\n      if (frame % patternRefreshInterval === 0) {\n        drawGrain();\n      }\n      frame++;\n      animationId = window.requestAnimationFrame(loop);\n    };\n    window.addEventListener('resize', resize);\n    resize();\n    loop();\n    return () => {\n      window.removeEventListener('resize', resize);\n      window.cancelAnimationFrame(animationId);\n    };\n  }, [patternSize, patternScaleX, patternScaleY, patternRefreshInterval, patternAlpha]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    className: \"noise-overlay\",\n    ref: grainRef,\n    style: {\n      imageRendering: 'pixelated'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_s(Noise, \"WiWT72+hkcUFZ8yqI+ISlWIcJf4=\");\n_c = Noise;\nexport default Noise;\nvar _c;\n$RefreshReg$(_c, \"Noise\");","map":{"version":3,"names":["useRef","useEffect","jsxDEV","_jsxDEV","Noise","patternSize","patternScaleX","patternScaleY","patternRefreshInterval","patternAlpha","_s","grainRef","canvas","current","ctx","getContext","alpha","frame","animationId","canvasSize","resize","width","height","style","drawGrain","imageData","createImageData","data","i","length","value","Math","random","putImageData","loop","window","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","className","ref","imageRendering","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/krishnapandey/Desktop/Img gen/magicads/src/components/Noise.jsx"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport './Noise.css';\n\nconst Noise = ({\n  patternSize = 250,\n  patternScaleX = 1,\n  patternScaleY = 1,\n  patternRefreshInterval = 2,\n  patternAlpha = 15,\n}) => {\n  const grainRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = grainRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d', { alpha: true });\n    if (!ctx) return;\n\n    let frame = 0;\n    let animationId;\n    const canvasSize = 1024;\n\n    const resize = () => {\n      if (!canvas) return;\n      canvas.width = canvasSize;\n      canvas.height = canvasSize;\n      canvas.style.width = '100vw';\n      canvas.style.height = '100vh';\n    };\n\n    const drawGrain = () => {\n      const imageData = ctx.createImageData(canvasSize, canvasSize);\n      const data = imageData.data;\n      for (let i = 0; i < data.length; i += 4) {\n        const value = Math.random() * 255;\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n        data[i + 3] = patternAlpha;\n      }\n      ctx.putImageData(imageData, 0, 0);\n    };\n\n    const loop = () => {\n      if (frame % patternRefreshInterval === 0) {\n        drawGrain();\n      }\n      frame++;\n      animationId = window.requestAnimationFrame(loop);\n    };\n\n    window.addEventListener('resize', resize);\n    resize();\n    loop();\n\n    return () => {\n      window.removeEventListener('resize', resize);\n      window.cancelAnimationFrame(animationId);\n    };\n  }, [patternSize, patternScaleX, patternScaleY, patternRefreshInterval, patternAlpha]);\n\n  return <canvas className=\"noise-overlay\" ref={grainRef} style={{ imageRendering: 'pixelated' }} />;\n};\n\nexport default Noise; "],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EACbC,WAAW,GAAG,GAAG;EACjBC,aAAa,GAAG,CAAC;EACjBC,aAAa,GAAG,CAAC;EACjBC,sBAAsB,GAAG,CAAC;EAC1BC,YAAY,GAAG;AACjB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGD,QAAQ,CAACE,OAAO;IAC/B,IAAI,CAACD,MAAM,EAAE;IAEb,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACpD,IAAI,CAACF,GAAG,EAAE;IAEV,IAAIG,KAAK,GAAG,CAAC;IACb,IAAIC,WAAW;IACf,MAAMC,UAAU,GAAG,IAAI;IAEvB,MAAMC,MAAM,GAAGA,CAAA,KAAM;MACnB,IAAI,CAACR,MAAM,EAAE;MACbA,MAAM,CAACS,KAAK,GAAGF,UAAU;MACzBP,MAAM,CAACU,MAAM,GAAGH,UAAU;MAC1BP,MAAM,CAACW,KAAK,CAACF,KAAK,GAAG,OAAO;MAC5BT,MAAM,CAACW,KAAK,CAACD,MAAM,GAAG,OAAO;IAC/B,CAAC;IAED,MAAME,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,SAAS,GAAGX,GAAG,CAACY,eAAe,CAACP,UAAU,EAAEA,UAAU,CAAC;MAC7D,MAAMQ,IAAI,GAAGF,SAAS,CAACE,IAAI;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;QACvC,MAAME,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QACjCL,IAAI,CAACC,CAAC,CAAC,GAAGE,KAAK;QACfH,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGE,KAAK;QACnBH,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGE,KAAK;QACnBH,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGnB,YAAY;MAC5B;MACAK,GAAG,CAACmB,YAAY,CAACR,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAED,MAAMS,IAAI,GAAGA,CAAA,KAAM;MACjB,IAAIjB,KAAK,GAAGT,sBAAsB,KAAK,CAAC,EAAE;QACxCgB,SAAS,CAAC,CAAC;MACb;MACAP,KAAK,EAAE;MACPC,WAAW,GAAGiB,MAAM,CAACC,qBAAqB,CAACF,IAAI,CAAC;IAClD,CAAC;IAEDC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEjB,MAAM,CAAC;IACzCA,MAAM,CAAC,CAAC;IACRc,IAAI,CAAC,CAAC;IAEN,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAElB,MAAM,CAAC;MAC5Ce,MAAM,CAACI,oBAAoB,CAACrB,WAAW,CAAC;IAC1C,CAAC;EACH,CAAC,EAAE,CAACb,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,sBAAsB,EAAEC,YAAY,CAAC,CAAC;EAErF,oBAAON,OAAA;IAAQqC,SAAS,EAAC,eAAe;IAACC,GAAG,EAAE9B,QAAS;IAACY,KAAK,EAAE;MAAEmB,cAAc,EAAE;IAAY;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpG,CAAC;AAACpC,EAAA,CA5DIN,KAAK;AAAA2C,EAAA,GAAL3C,KAAK;AA8DX,eAAeA,KAAK;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}